//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.OSS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperatorData", Namespace="http://schemas.datacontract.org/2004/07/OnlineSupportServiceLibrary.Entities")]
    [System.SerializableAttribute()]
    public partial class OperatorData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastOperationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OnlineTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OperatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastOperationTime {
            get {
                return this.LastOperationTimeField;
            }
            set {
                if ((this.LastOperationTimeField.Equals(value) != true)) {
                    this.LastOperationTimeField = value;
                    this.RaisePropertyChanged("LastOperationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OnlineTime {
            get {
                return this.OnlineTimeField;
            }
            set {
                if ((this.OnlineTimeField.Equals(value) != true)) {
                    this.OnlineTimeField = value;
                    this.RaisePropertyChanged("OnlineTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((this.OperatorIDField.Equals(value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientData", Namespace="http://schemas.datacontract.org/2004/07/OnlineSupportServiceLibrary.Entities")]
    [System.SerializableAttribute()]
    public partial class ClientData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastOperationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OnlineTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastOperationTime {
            get {
                return this.LastOperationTimeField;
            }
            set {
                if ((this.LastOperationTimeField.Equals(value) != true)) {
                    this.LastOperationTimeField = value;
                    this.RaisePropertyChanged("LastOperationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OnlineTime {
            get {
                return this.OnlineTimeField;
            }
            set {
                if ((this.OnlineTimeField.Equals(value) != true)) {
                    this.OnlineTimeField = value;
                    this.RaisePropertyChanged("OnlineTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatData", Namespace="http://schemas.datacontract.org/2004/07/OnlineSupportServiceLibrary.Entities")]
    [System.SerializableAttribute()]
    public partial class ChatData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime SendingTimeField;
        
        private string RecieverNameField;
        
        private string SenderNameField;
        
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime SendingTime {
            get {
                return this.SendingTimeField;
            }
            set {
                if ((this.SendingTimeField.Equals(value) != true)) {
                    this.SendingTimeField = value;
                    this.RaisePropertyChanged("SendingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string RecieverName {
            get {
                return this.RecieverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecieverNameField, value) != true)) {
                    this.RecieverNameField = value;
                    this.RaisePropertyChanged("RecieverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string SenderName {
            get {
                return this.SenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderNameField, value) != true)) {
                    this.SenderNameField = value;
                    this.RaisePropertyChanged("SenderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OSS.IOnlineSupportService")]
    public interface IOnlineSupportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/ClientStart", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientStartResponse")]
        System.Guid ClientStart(string userName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/ClientStart", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientStartResponse")]
        System.IAsyncResult BeginClientStart(string userName, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndClientStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/ClientEnd", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientEndResponse")]
        bool ClientEnd(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/ClientEnd", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientEndResponse")]
        System.IAsyncResult BeginClientEnd(System.Guid userID, System.AsyncCallback callback, object asyncState);
        
        bool EndClientEnd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/OperatorStart", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorStartResponse")]
        System.Guid OperatorStart(string userName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/OperatorStart", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorStartResponse")]
        System.IAsyncResult BeginOperatorStart(string userName, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndOperatorStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/OperatorEnd", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorEndResponse")]
        bool OperatorEnd(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/OperatorEnd", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorEndResponse")]
        System.IAsyncResult BeginOperatorEnd(System.Guid userID, System.AsyncCallback callback, object asyncState);
        
        bool EndOperatorEnd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/GetOperators", ReplyAction="http://tempuri.org/IOnlineSupportService/GetOperatorsResponse")]
        WebClient.OSS.OperatorData[] GetOperators();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/GetOperators", ReplyAction="http://tempuri.org/IOnlineSupportService/GetOperatorsResponse")]
        System.IAsyncResult BeginGetOperators(System.AsyncCallback callback, object asyncState);
        
        WebClient.OSS.OperatorData[] EndGetOperators(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/GetClients", ReplyAction="http://tempuri.org/IOnlineSupportService/GetClientsResponse")]
        WebClient.OSS.ClientData[] GetClients();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/GetClients", ReplyAction="http://tempuri.org/IOnlineSupportService/GetClientsResponse")]
        System.IAsyncResult BeginGetClients(System.AsyncCallback callback, object asyncState);
        
        WebClient.OSS.ClientData[] EndGetClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/ClientSendMessage", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientSendMessageResponse")]
        bool ClientSendMessage(System.Guid userID, System.Guid operatorID, string message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/ClientSendMessage", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientSendMessageResponse")]
        System.IAsyncResult BeginClientSendMessage(System.Guid userID, System.Guid operatorID, string message, System.AsyncCallback callback, object asyncState);
        
        bool EndClientSendMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/OperatorSendMessage", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorSendMessageResponse")]
        bool OperatorSendMessage(System.Guid operatorID, System.Guid userID, string message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/OperatorSendMessage", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorSendMessageResponse")]
        System.IAsyncResult BeginOperatorSendMessage(System.Guid operatorID, System.Guid userID, string message, System.AsyncCallback callback, object asyncState);
        
        bool EndOperatorSendMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/ClientGetMessages", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientGetMessagesResponse")]
        WebClient.OSS.ChatData[] ClientGetMessages(System.Guid userID, System.DateTime lastOperationTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/ClientGetMessages", ReplyAction="http://tempuri.org/IOnlineSupportService/ClientGetMessagesResponse")]
        System.IAsyncResult BeginClientGetMessages(System.Guid userID, System.DateTime lastOperationTime, System.AsyncCallback callback, object asyncState);
        
        WebClient.OSS.ChatData[] EndClientGetMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineSupportService/OperatorGetMessages", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorGetMessagesResponse")]
        WebClient.OSS.ChatData[] OperatorGetMessages(System.Guid OperatorID, System.DateTime lastOperationTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOnlineSupportService/OperatorGetMessages", ReplyAction="http://tempuri.org/IOnlineSupportService/OperatorGetMessagesResponse")]
        System.IAsyncResult BeginOperatorGetMessages(System.Guid OperatorID, System.DateTime lastOperationTime, System.AsyncCallback callback, object asyncState);
        
        WebClient.OSS.ChatData[] EndOperatorGetMessages(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IOnlineSupportServiceChannel : WebClient.OSS.IOnlineSupportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ClientStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClientStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ClientEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClientEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class OperatorStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OperatorStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class OperatorEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OperatorEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetOperatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOperatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WebClient.OSS.OperatorData[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WebClient.OSS.OperatorData[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WebClient.OSS.ClientData[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WebClient.OSS.ClientData[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ClientSendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClientSendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class OperatorSendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OperatorSendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ClientGetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClientGetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WebClient.OSS.ChatData[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WebClient.OSS.ChatData[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class OperatorGetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OperatorGetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WebClient.OSS.ChatData[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WebClient.OSS.ChatData[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class OnlineSupportServiceClient : System.ServiceModel.ClientBase<WebClient.OSS.IOnlineSupportService>, WebClient.OSS.IOnlineSupportService {
        
        private BeginOperationDelegate onBeginClientStartDelegate;
        
        private EndOperationDelegate onEndClientStartDelegate;
        
        private System.Threading.SendOrPostCallback onClientStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginClientEndDelegate;
        
        private EndOperationDelegate onEndClientEndDelegate;
        
        private System.Threading.SendOrPostCallback onClientEndCompletedDelegate;
        
        private BeginOperationDelegate onBeginOperatorStartDelegate;
        
        private EndOperationDelegate onEndOperatorStartDelegate;
        
        private System.Threading.SendOrPostCallback onOperatorStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginOperatorEndDelegate;
        
        private EndOperationDelegate onEndOperatorEndDelegate;
        
        private System.Threading.SendOrPostCallback onOperatorEndCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOperatorsDelegate;
        
        private EndOperationDelegate onEndGetOperatorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOperatorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientsDelegate;
        
        private EndOperationDelegate onEndGetClientsDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginClientSendMessageDelegate;
        
        private EndOperationDelegate onEndClientSendMessageDelegate;
        
        private System.Threading.SendOrPostCallback onClientSendMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginOperatorSendMessageDelegate;
        
        private EndOperationDelegate onEndOperatorSendMessageDelegate;
        
        private System.Threading.SendOrPostCallback onOperatorSendMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginClientGetMessagesDelegate;
        
        private EndOperationDelegate onEndClientGetMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onClientGetMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOperatorGetMessagesDelegate;
        
        private EndOperationDelegate onEndOperatorGetMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onOperatorGetMessagesCompletedDelegate;
        
        public OnlineSupportServiceClient() {
        }
        
        public OnlineSupportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OnlineSupportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineSupportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineSupportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ClientStartCompletedEventArgs> ClientStartCompleted;
        
        public event System.EventHandler<ClientEndCompletedEventArgs> ClientEndCompleted;
        
        public event System.EventHandler<OperatorStartCompletedEventArgs> OperatorStartCompleted;
        
        public event System.EventHandler<OperatorEndCompletedEventArgs> OperatorEndCompleted;
        
        public event System.EventHandler<GetOperatorsCompletedEventArgs> GetOperatorsCompleted;
        
        public event System.EventHandler<GetClientsCompletedEventArgs> GetClientsCompleted;
        
        public event System.EventHandler<ClientSendMessageCompletedEventArgs> ClientSendMessageCompleted;
        
        public event System.EventHandler<OperatorSendMessageCompletedEventArgs> OperatorSendMessageCompleted;
        
        public event System.EventHandler<ClientGetMessagesCompletedEventArgs> ClientGetMessagesCompleted;
        
        public event System.EventHandler<OperatorGetMessagesCompletedEventArgs> OperatorGetMessagesCompleted;
        
        public System.Guid ClientStart(string userName) {
            return base.Channel.ClientStart(userName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClientStart(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClientStart(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndClientStart(System.IAsyncResult result) {
            return base.Channel.EndClientStart(result);
        }
        
        private System.IAsyncResult OnBeginClientStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return this.BeginClientStart(userName, callback, asyncState);
        }
        
        private object[] OnEndClientStart(System.IAsyncResult result) {
            System.Guid retVal = this.EndClientStart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClientStartCompleted(object state) {
            if ((this.ClientStartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClientStartCompleted(this, new ClientStartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClientStartAsync(string userName) {
            this.ClientStartAsync(userName, null);
        }
        
        public void ClientStartAsync(string userName, object userState) {
            if ((this.onBeginClientStartDelegate == null)) {
                this.onBeginClientStartDelegate = new BeginOperationDelegate(this.OnBeginClientStart);
            }
            if ((this.onEndClientStartDelegate == null)) {
                this.onEndClientStartDelegate = new EndOperationDelegate(this.OnEndClientStart);
            }
            if ((this.onClientStartCompletedDelegate == null)) {
                this.onClientStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClientStartCompleted);
            }
            base.InvokeAsync(this.onBeginClientStartDelegate, new object[] {
                        userName}, this.onEndClientStartDelegate, this.onClientStartCompletedDelegate, userState);
        }
        
        public bool ClientEnd(System.Guid userID) {
            return base.Channel.ClientEnd(userID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClientEnd(System.Guid userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClientEnd(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndClientEnd(System.IAsyncResult result) {
            return base.Channel.EndClientEnd(result);
        }
        
        private System.IAsyncResult OnBeginClientEnd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userID = ((System.Guid)(inValues[0]));
            return this.BeginClientEnd(userID, callback, asyncState);
        }
        
        private object[] OnEndClientEnd(System.IAsyncResult result) {
            bool retVal = this.EndClientEnd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClientEndCompleted(object state) {
            if ((this.ClientEndCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClientEndCompleted(this, new ClientEndCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClientEndAsync(System.Guid userID) {
            this.ClientEndAsync(userID, null);
        }
        
        public void ClientEndAsync(System.Guid userID, object userState) {
            if ((this.onBeginClientEndDelegate == null)) {
                this.onBeginClientEndDelegate = new BeginOperationDelegate(this.OnBeginClientEnd);
            }
            if ((this.onEndClientEndDelegate == null)) {
                this.onEndClientEndDelegate = new EndOperationDelegate(this.OnEndClientEnd);
            }
            if ((this.onClientEndCompletedDelegate == null)) {
                this.onClientEndCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClientEndCompleted);
            }
            base.InvokeAsync(this.onBeginClientEndDelegate, new object[] {
                        userID}, this.onEndClientEndDelegate, this.onClientEndCompletedDelegate, userState);
        }
        
        public System.Guid OperatorStart(string userName) {
            return base.Channel.OperatorStart(userName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOperatorStart(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOperatorStart(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndOperatorStart(System.IAsyncResult result) {
            return base.Channel.EndOperatorStart(result);
        }
        
        private System.IAsyncResult OnBeginOperatorStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return this.BeginOperatorStart(userName, callback, asyncState);
        }
        
        private object[] OnEndOperatorStart(System.IAsyncResult result) {
            System.Guid retVal = this.EndOperatorStart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOperatorStartCompleted(object state) {
            if ((this.OperatorStartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OperatorStartCompleted(this, new OperatorStartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OperatorStartAsync(string userName) {
            this.OperatorStartAsync(userName, null);
        }
        
        public void OperatorStartAsync(string userName, object userState) {
            if ((this.onBeginOperatorStartDelegate == null)) {
                this.onBeginOperatorStartDelegate = new BeginOperationDelegate(this.OnBeginOperatorStart);
            }
            if ((this.onEndOperatorStartDelegate == null)) {
                this.onEndOperatorStartDelegate = new EndOperationDelegate(this.OnEndOperatorStart);
            }
            if ((this.onOperatorStartCompletedDelegate == null)) {
                this.onOperatorStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOperatorStartCompleted);
            }
            base.InvokeAsync(this.onBeginOperatorStartDelegate, new object[] {
                        userName}, this.onEndOperatorStartDelegate, this.onOperatorStartCompletedDelegate, userState);
        }
        
        public bool OperatorEnd(System.Guid userID) {
            return base.Channel.OperatorEnd(userID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOperatorEnd(System.Guid userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOperatorEnd(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndOperatorEnd(System.IAsyncResult result) {
            return base.Channel.EndOperatorEnd(result);
        }
        
        private System.IAsyncResult OnBeginOperatorEnd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userID = ((System.Guid)(inValues[0]));
            return this.BeginOperatorEnd(userID, callback, asyncState);
        }
        
        private object[] OnEndOperatorEnd(System.IAsyncResult result) {
            bool retVal = this.EndOperatorEnd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOperatorEndCompleted(object state) {
            if ((this.OperatorEndCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OperatorEndCompleted(this, new OperatorEndCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OperatorEndAsync(System.Guid userID) {
            this.OperatorEndAsync(userID, null);
        }
        
        public void OperatorEndAsync(System.Guid userID, object userState) {
            if ((this.onBeginOperatorEndDelegate == null)) {
                this.onBeginOperatorEndDelegate = new BeginOperationDelegate(this.OnBeginOperatorEnd);
            }
            if ((this.onEndOperatorEndDelegate == null)) {
                this.onEndOperatorEndDelegate = new EndOperationDelegate(this.OnEndOperatorEnd);
            }
            if ((this.onOperatorEndCompletedDelegate == null)) {
                this.onOperatorEndCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOperatorEndCompleted);
            }
            base.InvokeAsync(this.onBeginOperatorEndDelegate, new object[] {
                        userID}, this.onEndOperatorEndDelegate, this.onOperatorEndCompletedDelegate, userState);
        }
        
        public WebClient.OSS.OperatorData[] GetOperators() {
            return base.Channel.GetOperators();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOperators(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOperators(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WebClient.OSS.OperatorData[] EndGetOperators(System.IAsyncResult result) {
            return base.Channel.EndGetOperators(result);
        }
        
        private System.IAsyncResult OnBeginGetOperators(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetOperators(callback, asyncState);
        }
        
        private object[] OnEndGetOperators(System.IAsyncResult result) {
            WebClient.OSS.OperatorData[] retVal = this.EndGetOperators(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOperatorsCompleted(object state) {
            if ((this.GetOperatorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOperatorsCompleted(this, new GetOperatorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOperatorsAsync() {
            this.GetOperatorsAsync(null);
        }
        
        public void GetOperatorsAsync(object userState) {
            if ((this.onBeginGetOperatorsDelegate == null)) {
                this.onBeginGetOperatorsDelegate = new BeginOperationDelegate(this.OnBeginGetOperators);
            }
            if ((this.onEndGetOperatorsDelegate == null)) {
                this.onEndGetOperatorsDelegate = new EndOperationDelegate(this.OnEndGetOperators);
            }
            if ((this.onGetOperatorsCompletedDelegate == null)) {
                this.onGetOperatorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOperatorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOperatorsDelegate, null, this.onEndGetOperatorsDelegate, this.onGetOperatorsCompletedDelegate, userState);
        }
        
        public WebClient.OSS.ClientData[] GetClients() {
            return base.Channel.GetClients();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClients(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClients(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WebClient.OSS.ClientData[] EndGetClients(System.IAsyncResult result) {
            return base.Channel.EndGetClients(result);
        }
        
        private System.IAsyncResult OnBeginGetClients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetClients(callback, asyncState);
        }
        
        private object[] OnEndGetClients(System.IAsyncResult result) {
            WebClient.OSS.ClientData[] retVal = this.EndGetClients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientsCompleted(object state) {
            if ((this.GetClientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientsCompleted(this, new GetClientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientsAsync() {
            this.GetClientsAsync(null);
        }
        
        public void GetClientsAsync(object userState) {
            if ((this.onBeginGetClientsDelegate == null)) {
                this.onBeginGetClientsDelegate = new BeginOperationDelegate(this.OnBeginGetClients);
            }
            if ((this.onEndGetClientsDelegate == null)) {
                this.onEndGetClientsDelegate = new EndOperationDelegate(this.OnEndGetClients);
            }
            if ((this.onGetClientsCompletedDelegate == null)) {
                this.onGetClientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientsCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientsDelegate, null, this.onEndGetClientsDelegate, this.onGetClientsCompletedDelegate, userState);
        }
        
        public bool ClientSendMessage(System.Guid userID, System.Guid operatorID, string message) {
            return base.Channel.ClientSendMessage(userID, operatorID, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClientSendMessage(System.Guid userID, System.Guid operatorID, string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClientSendMessage(userID, operatorID, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndClientSendMessage(System.IAsyncResult result) {
            return base.Channel.EndClientSendMessage(result);
        }
        
        private System.IAsyncResult OnBeginClientSendMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userID = ((System.Guid)(inValues[0]));
            System.Guid operatorID = ((System.Guid)(inValues[1]));
            string message = ((string)(inValues[2]));
            return this.BeginClientSendMessage(userID, operatorID, message, callback, asyncState);
        }
        
        private object[] OnEndClientSendMessage(System.IAsyncResult result) {
            bool retVal = this.EndClientSendMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClientSendMessageCompleted(object state) {
            if ((this.ClientSendMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClientSendMessageCompleted(this, new ClientSendMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClientSendMessageAsync(System.Guid userID, System.Guid operatorID, string message) {
            this.ClientSendMessageAsync(userID, operatorID, message, null);
        }
        
        public void ClientSendMessageAsync(System.Guid userID, System.Guid operatorID, string message, object userState) {
            if ((this.onBeginClientSendMessageDelegate == null)) {
                this.onBeginClientSendMessageDelegate = new BeginOperationDelegate(this.OnBeginClientSendMessage);
            }
            if ((this.onEndClientSendMessageDelegate == null)) {
                this.onEndClientSendMessageDelegate = new EndOperationDelegate(this.OnEndClientSendMessage);
            }
            if ((this.onClientSendMessageCompletedDelegate == null)) {
                this.onClientSendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClientSendMessageCompleted);
            }
            base.InvokeAsync(this.onBeginClientSendMessageDelegate, new object[] {
                        userID,
                        operatorID,
                        message}, this.onEndClientSendMessageDelegate, this.onClientSendMessageCompletedDelegate, userState);
        }
        
        public bool OperatorSendMessage(System.Guid operatorID, System.Guid userID, string message) {
            return base.Channel.OperatorSendMessage(operatorID, userID, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOperatorSendMessage(System.Guid operatorID, System.Guid userID, string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOperatorSendMessage(operatorID, userID, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndOperatorSendMessage(System.IAsyncResult result) {
            return base.Channel.EndOperatorSendMessage(result);
        }
        
        private System.IAsyncResult OnBeginOperatorSendMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid operatorID = ((System.Guid)(inValues[0]));
            System.Guid userID = ((System.Guid)(inValues[1]));
            string message = ((string)(inValues[2]));
            return this.BeginOperatorSendMessage(operatorID, userID, message, callback, asyncState);
        }
        
        private object[] OnEndOperatorSendMessage(System.IAsyncResult result) {
            bool retVal = this.EndOperatorSendMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOperatorSendMessageCompleted(object state) {
            if ((this.OperatorSendMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OperatorSendMessageCompleted(this, new OperatorSendMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OperatorSendMessageAsync(System.Guid operatorID, System.Guid userID, string message) {
            this.OperatorSendMessageAsync(operatorID, userID, message, null);
        }
        
        public void OperatorSendMessageAsync(System.Guid operatorID, System.Guid userID, string message, object userState) {
            if ((this.onBeginOperatorSendMessageDelegate == null)) {
                this.onBeginOperatorSendMessageDelegate = new BeginOperationDelegate(this.OnBeginOperatorSendMessage);
            }
            if ((this.onEndOperatorSendMessageDelegate == null)) {
                this.onEndOperatorSendMessageDelegate = new EndOperationDelegate(this.OnEndOperatorSendMessage);
            }
            if ((this.onOperatorSendMessageCompletedDelegate == null)) {
                this.onOperatorSendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOperatorSendMessageCompleted);
            }
            base.InvokeAsync(this.onBeginOperatorSendMessageDelegate, new object[] {
                        operatorID,
                        userID,
                        message}, this.onEndOperatorSendMessageDelegate, this.onOperatorSendMessageCompletedDelegate, userState);
        }
        
        public WebClient.OSS.ChatData[] ClientGetMessages(System.Guid userID, System.DateTime lastOperationTime) {
            return base.Channel.ClientGetMessages(userID, lastOperationTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClientGetMessages(System.Guid userID, System.DateTime lastOperationTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClientGetMessages(userID, lastOperationTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WebClient.OSS.ChatData[] EndClientGetMessages(System.IAsyncResult result) {
            return base.Channel.EndClientGetMessages(result);
        }
        
        private System.IAsyncResult OnBeginClientGetMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userID = ((System.Guid)(inValues[0]));
            System.DateTime lastOperationTime = ((System.DateTime)(inValues[1]));
            return this.BeginClientGetMessages(userID, lastOperationTime, callback, asyncState);
        }
        
        private object[] OnEndClientGetMessages(System.IAsyncResult result) {
            WebClient.OSS.ChatData[] retVal = this.EndClientGetMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClientGetMessagesCompleted(object state) {
            if ((this.ClientGetMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClientGetMessagesCompleted(this, new ClientGetMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClientGetMessagesAsync(System.Guid userID, System.DateTime lastOperationTime) {
            this.ClientGetMessagesAsync(userID, lastOperationTime, null);
        }
        
        public void ClientGetMessagesAsync(System.Guid userID, System.DateTime lastOperationTime, object userState) {
            if ((this.onBeginClientGetMessagesDelegate == null)) {
                this.onBeginClientGetMessagesDelegate = new BeginOperationDelegate(this.OnBeginClientGetMessages);
            }
            if ((this.onEndClientGetMessagesDelegate == null)) {
                this.onEndClientGetMessagesDelegate = new EndOperationDelegate(this.OnEndClientGetMessages);
            }
            if ((this.onClientGetMessagesCompletedDelegate == null)) {
                this.onClientGetMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClientGetMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginClientGetMessagesDelegate, new object[] {
                        userID,
                        lastOperationTime}, this.onEndClientGetMessagesDelegate, this.onClientGetMessagesCompletedDelegate, userState);
        }
        
        public WebClient.OSS.ChatData[] OperatorGetMessages(System.Guid OperatorID, System.DateTime lastOperationTime) {
            return base.Channel.OperatorGetMessages(OperatorID, lastOperationTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOperatorGetMessages(System.Guid OperatorID, System.DateTime lastOperationTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOperatorGetMessages(OperatorID, lastOperationTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WebClient.OSS.ChatData[] EndOperatorGetMessages(System.IAsyncResult result) {
            return base.Channel.EndOperatorGetMessages(result);
        }
        
        private System.IAsyncResult OnBeginOperatorGetMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid OperatorID = ((System.Guid)(inValues[0]));
            System.DateTime lastOperationTime = ((System.DateTime)(inValues[1]));
            return this.BeginOperatorGetMessages(OperatorID, lastOperationTime, callback, asyncState);
        }
        
        private object[] OnEndOperatorGetMessages(System.IAsyncResult result) {
            WebClient.OSS.ChatData[] retVal = this.EndOperatorGetMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOperatorGetMessagesCompleted(object state) {
            if ((this.OperatorGetMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OperatorGetMessagesCompleted(this, new OperatorGetMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OperatorGetMessagesAsync(System.Guid OperatorID, System.DateTime lastOperationTime) {
            this.OperatorGetMessagesAsync(OperatorID, lastOperationTime, null);
        }
        
        public void OperatorGetMessagesAsync(System.Guid OperatorID, System.DateTime lastOperationTime, object userState) {
            if ((this.onBeginOperatorGetMessagesDelegate == null)) {
                this.onBeginOperatorGetMessagesDelegate = new BeginOperationDelegate(this.OnBeginOperatorGetMessages);
            }
            if ((this.onEndOperatorGetMessagesDelegate == null)) {
                this.onEndOperatorGetMessagesDelegate = new EndOperationDelegate(this.OnEndOperatorGetMessages);
            }
            if ((this.onOperatorGetMessagesCompletedDelegate == null)) {
                this.onOperatorGetMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOperatorGetMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginOperatorGetMessagesDelegate, new object[] {
                        OperatorID,
                        lastOperationTime}, this.onEndOperatorGetMessagesDelegate, this.onOperatorGetMessagesCompletedDelegate, userState);
        }
    }
}
